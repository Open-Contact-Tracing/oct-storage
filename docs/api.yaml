openapi: 3.0.0
servers:
  - description: Development server
    url: https://storage.dev.opencovidtrace.org/
  - description: Production server
    url: https://storage.opencovidtrace.org/
info:
  description: This is a simple API
  version: "0.2.0"
  title:  API
  contact:
    email: rodionov@opencovidtrace.org
  license:
    name: LGPLv3
tags:
  - name: tracks
    description: API for anonymous tracks
  - name: contacts
    description: API for contacts data
paths:
  /tracks:
    get:
      tags:
        - tracks
      summary: load tracks
      operationId: getTracks
      parameters:
        - in: query
          name: lastUpdateTimestamp
          schema:
            type: number
            format: timestamp
            example: 1585571836321
          description: Timestamp tracks upload time to start from
        - in: query
          name: minLng
          schema:
            type: number
            format: float
          description: Min Longitude of user
        - in: query
          name: maxLng
          schema:
            type: number
            format: float
          description: Max Longitude of user
        - in: query
          name: minLat
          schema:
            type: number
            format: float
          description: Min Latitude of user
        - in: query
          name: maxLat
          schema:
            type: number
            format: float
          description: Min Latitude of user
      responses:
        '200':
          description: User tracks
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tracks'
    post:
      tags:
        - tracks
      summary: post track points for user
      operationId: postTracks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tracks'
      responses:
        '200':
          description: Track created
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        '400':
          description: Invalid data in request
  /keys:
    get:
      tags:
        - contacts
      summary: get infected keys
      operationId: getContact
      parameters:
        - in: query
          name: lastUpdateTimestamp
          schema:
            type: number
            format: timestamp
            example: 1585571836321
          description: Timestamp tracks upload time to start from
        - in: query
          name: minLng
          schema:
            type: number
            format: float
          description: Min Longitude of user
        - in: query
          name: maxLng
          schema:
            type: number
            format: float
          description: Max Longitude of user
        - in: query
          name: minLat
          schema:
            type: number
            format: float
          description: Min Latitude of user
        - in: query
          name: maxLat
          schema:
            type: number
            format: float
          description: Min Latitude of user
      responses:
       '200':
          description: User contacts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Keys'
    post:
      tags:
        - contacts
      summary: upload anonymous user infected contacts 
      operationId: postContact
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Keys'
      responses:
       '200':
          description: Contacts created
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
components:
  responses:
    404NotFound:
      description:  The specified resource was not found.
  schemas:
    UserHealthStatus:
      type: string
      enum:
       - healthy
       - covid_report
       - covid_confirmed
    ClientContactKey:
      type: string
      description: Client contact key generated every 15min in base64 format 
      example: "114211414adadsakjfsalj12e1jlajsd"
    ClientAnonKey:
      type: string
      description: Anonymous user id based on private key hash
      example: "1414akjlajdklj12klrj1lk2rj1kl2rj"
    BorderItem:
      type: object
      required:
        - minLat
        - maxLat
        - minLng
        - maxLng
      properties:
        minLat:
          type: number
          format: float
          description: Minimum latitude in rectangle
          example: 38.736946
        maxlat:
          type: number
          format: float
          description: Maximum latitude in rectangle
          example: 38.756946
        minLng:
          type: number
          format: float
          description: Minimum longitude in rectangle
          example:  -9.142685
        maxLng:
          type: number
          format: float
          description: Maximum longitude in rectangle
          example: -9.102685
    KeyItem:
      type: object
      required:
        - value
        - day
        - border
      properties:
        value:
          $ref: '#/components/schemas/ClientContactKey'
        day:
          $ref: '#/components/schemas/DayInt'
        border:
          $ref: '#/components/schemas/BorderItem'
    Keys:
      type: object
      required:
       - keys
      properties:
        keys:
          type: array
          items:
            $ref: '#/components/schemas/KeyItem'
    PointItem:
      type: object
      required:
        - tst
        - lat
        - lng
      properties:
        tst:
          type: number
          format: timestamp
          description: timestamp in milliseconds
          example: 1585571836321
        lat:
          type: number
          format: float
          description: Latitude
          example:  38.736946
        lng:
          type: number
          format: float
          description: Longitude
          example: -9.142685
    DayInt:
      type: integer
      format: timestamp
      description: day in timestamp format
      example: 1585526400
    TrackDayItem:
      type: object
      required:
       - points
       - day
       - key
      properties:
        points:
          type: array
          items:
            $ref: '#/components/schemas/PointItem'
        day:
          $ref: '#/components/schemas/DayInt'
        key:
          $ref: '#/components/schemas/ClientAnonKey'
    Tracks:
      type: object
      required:
       - tracks
      properties:
        tracks:
          type: array
          items:
            $ref: '#/components/schemas/TrackDayItem'
